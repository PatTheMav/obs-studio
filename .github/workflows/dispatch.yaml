name: Dispatch
run-name: Dispatched Repository Actions ‚åõÔ∏è
on:
  workflow_dispatch:
    inputs:
      job:
        description: Dispatch job to run
        required: true
        type: choice
        options:
          - steam
          - services
          - translations
      ref:
        description: GitHub reference to use for job
        type: string
        required: false
permissions:
  contents: read
concurrency:
  group: '${{ github.workflow }}-${{ inputs.job }} @ ${{ inputs.ref || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
  services-validation:
    name: Check services configuration files üïµÔ∏è
    if: ${{ github.repository_owner == 'obsproject' && inputs.job == 'services' }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for defunct services üìâ
        uses: ./.github/actions/services-validation
        with:
          repositorySecret: ${{ secrets.GITHUB_TOKEN }}
          runSchemaChecks: 'false'
          runServiceChecks: 'true'
  download-language-files:
    name: Download language files üåê
    if: ${{ github.repository_owner == 'obsproject' && inputs.job == 'translations' }}
    runs-on: ubuntu-22.04
    env:
      CROWDIN_PAT: ${{ secrets.CROWDIN_SYNC_CROWDIN_PAT }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.CROWDIN_SYNC_GITHUB_PAT }}
      - uses: obsproject/obs-crowdin-sync/download@0.2.1
  steam-upload:
    name: Upload Steam builds üöÇ
    if: ${{ github.repository_owner == 'obsproject' && inputs.job == 'steam' }}
    needs: [macos-nightly, windows-nightly]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          path: source
      - uses: ./.github/actions/steam-upload
        with:
          steamSecret: ${{ secrets.STEAM_SHARED_SECRET }}
          steamUser: ${{ secrets.STEAM_USER }}
          steamPassword: ${{ secrets.STEAM_PASSWORD }}
          sourcePath: ${{ github.workspace }}/source
          tagName: ${{ inputs.ref }}
