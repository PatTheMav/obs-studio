name: Static code analysis obs-studio
description: Runs clang static code analysis on obs-studio
inputs:
  target:
    description: Build target for obs-studio
    required: true
  repositorySecret:
    description: GitHub token for API access
    required: true
  workingDirectory:
    description: Working directory for packaging
    required: false
    default: ${{ github.workspace }}
runs:
  using: composite
  steps:
    - name: Check Runner Operating System 🏃‍♂️
      if: runner.os != 'macOS'
      shell: bash
      run: |
        : Check Runner Operating System 🏃‍♂️
        echo '::error::steam-upload action requires a macOS-based runner.'
        exit 2

    - name: Run macOS code analysis 🔬
      if: runner.os == 'macOS'
      shell: zsh --no-rcs --errexit --pipefail {0}
      working-directory: ${{ inputs.workingDirectory }}
      run: |
        : Run macOS code analysis 🔬

        local -a build_args=(
          --config Analyze
          --target macos-${{ inputs.target }}
        )
        if (( ${+RUNNER_DEBUG} )) build_args+=(--debug)

        git fetch origin --no-tags --no-recurse-submodules -q
        .github/scripts/build-macos ${build_args}

    - name: Annotate Build Errors 🏷️
      if: runner.os == 'macOS'
      uses: yuzutech/annotations-action@v0.4.0
      with:
        repo-token: ${{ inputs.repositorySecret }}
        title: Clang Compiler
        input: ${{ inputs.workingDirectory }}/build_issues.json
